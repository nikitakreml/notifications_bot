services:
  bot:
    build:
      context: .
    image: notifications_bot:latest
    container_name: notifications_bot-bot-1
    restart: always
    init: true                     # аккуратные сигналы/зомби-реапер

    env_file:
      - .env
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - TZ=${TZ}
      - DB_PATH=/data/bot.db
      - PYTHONDONTWRITEBYTECODE=1  # не писать .pyc на read-only FS
      - PYTHONUNBUFFERED=1         # логи без буферизации
      - HOME=/tmp                  # $HOME доступен для произвольного UID
    command: ["python", "-X", "utf8", "main.py"]

    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

    volumes:
      - ./data:/data
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /var/tmp

    user: "${UID}:${GID}"

    stop_signal: SIGINT
    stop_grace_period: 60s

    mem_limit: 256m
    memswap_limit: 1g
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - << 'PY'\nimport os,sys,urllib.request,json\nbt=os.getenv('BOT_TOKEN')\ntry:\n  me=json.load(urllib.request.urlopen(f'https://api.telegram.org/bot{bt}/getMe',timeout=10))\n  info=json.load(urllib.request.urlopen(f'https://api.telegram.org/bot{bt}/getWebhookInfo',timeout=10))\n  url=info.get('result',{}).get('url','')\n  sys.exit(0 if me.get('ok') and not url else 1)\nexcept Exception:\n  sys.exit(1)\nPY"
        ]
      interval: 1m
      timeout: 15s
      retries: 3
      start_period: 25s
